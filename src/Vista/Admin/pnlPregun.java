/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista.Admin;

import Controlador.CtlPregunta;
import Controlador.CtlTema;
import Controlador.Main;
import Modelo.Opcion;
import Modelo.Pregunta;
import java.awt.Color;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.EtchedBorder;
import javax.swing.border.LineBorder;

/**
 *
 * @author Daryl Ospina
 */
public class pnlPregun extends javax.swing.JPanel {

    private CtlTema controladorTema;
    private CtlPregunta controladorPregunta;
    private final JDialog padre;
    private int tipoPreg;
    private Pregunta preg;
    private ArrayList<Opcion> opciones;
    private int idPreg;
    private final pnlPregUsus abuelo;

    /**
     * Creates new form pnlPregun
     */
    public pnlPregun(JDialog padre, JPanel abuelo) {
        initComponents();
        iniciar();
        this.padre = padre;
        lblTema.setVisible(false);
        cbTema.setVisible(false);
        pnlPrengunta.setVisible(false);
        lblEnunciado.setVisible(false);
        txtEnunciado.setVisible(false);
        opcionesVisibles(false);
        tipoPreg = cbTipoPreg.getSelectedIndex();
        padre.setSize(430, 140);
        this.abuelo = (pnlPregUsus) abuelo;
    }

    public pnlPregun(Pregunta pregunta, String idPreg, JDialog padre, JPanel abuelo) {
        initComponents();
        this.padre = padre;
        this.abuelo = (pnlPregUsus) abuelo;
        iniciar();
        padre.setSize(1008, 670);
        this.preg = pregunta;
        opciones = controladorPregunta.getOpciones(Integer.parseInt(idPreg));
        this.idPreg = Integer.parseInt(idPreg);
        cargarInfo();
        validarEnunciado();
        btnTerminar.setText("MODIFICAR");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupo = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        pnlCB = new javax.swing.JPanel();
        lblTP = new javax.swing.JLabel();
        cbTipoPreg = new javax.swing.JComboBox<>();
        lblTema = new javax.swing.JLabel();
        cbTema = new javax.swing.JComboBox<>();
        pnlPrengunta = new javax.swing.JPanel();
        lblEnunciado = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtEnunciado = new javax.swing.JTextArea();
        pnlA = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtA = new javax.swing.JTextArea();
        rbtnA = new javax.swing.JRadioButton();
        chA = new javax.swing.JCheckBox();
        lblA = new javax.swing.JLabel();
        pnlB = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtB = new javax.swing.JTextArea();
        rbtnB = new javax.swing.JRadioButton();
        chB = new javax.swing.JCheckBox();
        lblB = new javax.swing.JLabel();
        pnlC = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtC = new javax.swing.JTextArea();
        rbtnC = new javax.swing.JRadioButton();
        chC = new javax.swing.JCheckBox();
        lblC = new javax.swing.JLabel();
        pnlD = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtD = new javax.swing.JTextArea();
        rbtnD = new javax.swing.JRadioButton();
        chD = new javax.swing.JCheckBox();
        lblD = new javax.swing.JLabel();
        btnTerminar = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(0, 134, 150));

        pnlCB.setBackground(new java.awt.Color(0, 0, 29));
        pnlCB.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        lblTP.setForeground(new java.awt.Color(255, 255, 255));
        lblTP.setText("TIPO DE PREGUNTA:");

        cbTipoPreg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoPregActionPerformed(evt);
            }
        });

        lblTema.setForeground(new java.awt.Color(255, 255, 255));
        lblTema.setText("TEMA:");

        cbTema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTemaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCBLayout = new javax.swing.GroupLayout(pnlCB);
        pnlCB.setLayout(pnlCBLayout);
        pnlCBLayout.setHorizontalGroup(
            pnlCBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCBLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbTipoPreg, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTP))
                .addGap(18, 18, 18)
                .addGroup(pnlCBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCBLayout.createSequentialGroup()
                        .addComponent(lblTema)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(cbTema, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlCBLayout.setVerticalGroup(
            pnlCBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCBLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTP)
                    .addComponent(lblTema))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbTipoPreg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbTema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pnlPrengunta.setBackground(new java.awt.Color(0, 0, 29));
        pnlPrengunta.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblEnunciado.setForeground(new java.awt.Color(255, 255, 255));
        lblEnunciado.setText("ENUNCIADO:");

        txtEnunciado.setColumns(20);
        txtEnunciado.setRows(5);
        txtEnunciado.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtEnunciado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEnunciadoKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(txtEnunciado);

        pnlA.setBackground(new java.awt.Color(0, 0, 29));

        txtA.setColumns(20);
        txtA.setRows(5);
        txtA.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAFocusGained(evt);
            }
        });
        txtA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtAMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(txtA);

        rbtnA.setBackground(new java.awt.Color(0, 0, 29));

        chA.setBackground(new java.awt.Color(0, 0, 29));

        lblA.setForeground(new java.awt.Color(255, 255, 255));
        lblA.setText("Opcion 1:");

        javax.swing.GroupLayout pnlALayout = new javax.swing.GroupLayout(pnlA);
        pnlA.setLayout(pnlALayout);
        pnlALayout.setHorizontalGroup(
            pnlALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlALayout.createSequentialGroup()
                .addComponent(lblA)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlALayout.createSequentialGroup()
                .addComponent(chA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlALayout.setVerticalGroup(
            pnlALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlALayout.createSequentialGroup()
                .addComponent(lblA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlALayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(pnlALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chA)
                            .addComponent(rbtnA))))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pnlB.setBackground(new java.awt.Color(0, 0, 29));

        txtB.setColumns(20);
        txtB.setRows(5);
        txtB.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtB.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBFocusGained(evt);
            }
        });
        txtB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtBMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(txtB);

        rbtnB.setBackground(new java.awt.Color(0, 0, 29));

        chB.setBackground(new java.awt.Color(0, 0, 29));

        lblB.setForeground(new java.awt.Color(255, 255, 255));
        lblB.setText("Opcion 2:");

        javax.swing.GroupLayout pnlBLayout = new javax.swing.GroupLayout(pnlB);
        pnlB.setLayout(pnlBLayout);
        pnlBLayout.setHorizontalGroup(
            pnlBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBLayout.createSequentialGroup()
                .addComponent(chB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pnlBLayout.createSequentialGroup()
                .addComponent(lblB)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlBLayout.setVerticalGroup(
            pnlBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBLayout.createSequentialGroup()
                .addComponent(lblB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlBLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(pnlBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chB)
                            .addComponent(rbtnB))))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pnlC.setBackground(new java.awt.Color(0, 0, 29));

        txtC.setColumns(20);
        txtC.setRows(5);
        txtC.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtC.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCFocusGained(evt);
            }
        });
        txtC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(txtC);

        rbtnC.setBackground(new java.awt.Color(0, 0, 29));

        chC.setBackground(new java.awt.Color(0, 0, 29));

        lblC.setForeground(new java.awt.Color(255, 255, 255));
        lblC.setText("Opcion 3:");

        javax.swing.GroupLayout pnlCLayout = new javax.swing.GroupLayout(pnlC);
        pnlC.setLayout(pnlCLayout);
        pnlCLayout.setHorizontalGroup(
            pnlCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCLayout.createSequentialGroup()
                .addComponent(lblC)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(pnlCLayout.createSequentialGroup()
                .addComponent(chC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlCLayout.setVerticalGroup(
            pnlCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCLayout.createSequentialGroup()
                .addComponent(lblC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlCLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(pnlCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chC)
                            .addComponent(rbtnC))))
                .addGap(0, 27, Short.MAX_VALUE))
        );

        pnlD.setBackground(new java.awt.Color(0, 0, 29));

        txtD.setColumns(20);
        txtD.setRows(5);
        txtD.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtD.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDFocusGained(evt);
            }
        });
        txtD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtDMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(txtD);

        rbtnD.setBackground(new java.awt.Color(0, 0, 29));

        chD.setBackground(new java.awt.Color(0, 0, 29));

        lblD.setForeground(new java.awt.Color(255, 255, 255));
        lblD.setText("Opcion 4:");

        javax.swing.GroupLayout pnlDLayout = new javax.swing.GroupLayout(pnlD);
        pnlD.setLayout(pnlDLayout);
        pnlDLayout.setHorizontalGroup(
            pnlDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDLayout.createSequentialGroup()
                .addComponent(chD)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnD)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pnlDLayout.createSequentialGroup()
                .addComponent(lblD)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlDLayout.setVerticalGroup(
            pnlDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDLayout.createSequentialGroup()
                .addComponent(lblD)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlDLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(pnlDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chD)
                            .addComponent(rbtnD))))
                .addGap(0, 27, Short.MAX_VALUE))
        );

        btnTerminar.setBackground(new java.awt.Color(75, 117, 137));
        btnTerminar.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        btnTerminar.setForeground(new java.awt.Color(0, 0, 29));
        btnTerminar.setText("TERMINAR");
        btnTerminar.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153))));
        btnTerminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTerminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTerminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlPrenguntaLayout = new javax.swing.GroupLayout(pnlPrengunta);
        pnlPrengunta.setLayout(pnlPrenguntaLayout);
        pnlPrenguntaLayout.setHorizontalGroup(
            pnlPrenguntaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrenguntaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPrenguntaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTerminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(pnlPrenguntaLayout.createSequentialGroup()
                        .addGroup(pnlPrenguntaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEnunciado)
                            .addGroup(pnlPrenguntaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(pnlPrenguntaLayout.createSequentialGroup()
                                    .addComponent(pnlC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(pnlD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlPrenguntaLayout.createSequentialGroup()
                                    .addComponent(pnlA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(pnlB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlPrenguntaLayout.setVerticalGroup(
            pnlPrenguntaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrenguntaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblEnunciado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlPrenguntaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPrenguntaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTerminar, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlPrengunta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlCB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlPrengunta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbTipoPregActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoPregActionPerformed
        // TODO add your handling code here:
        tipoPreg = cbTipoPreg.getSelectedIndex();
        if (cbTipoPreg.getSelectedIndex() != 0) {
            lblTema.setVisible(true);
            cbTema.setVisible(true);
            padre.setSize(842, 140);
            pnlCB.updateUI();
            if (validarTema()) {
                validarEnunciado();
            }
            if (preg != null) {
                padre.setSize(1008, 650);
                padre.setLocationRelativeTo(null);
            }
        } else {
            lblTema.setVisible(false);
            cbTema.setVisible(false);
            lblEnunciado.setVisible(false);
            txtEnunciado.setVisible(false);
            pnlPrengunta.setVisible(false);
            opcionesVisibles(false);
            padre.setSize(430, 140);
            pnlCB.updateUI();
        }
        padre.setLocationRelativeTo(null);
    }//GEN-LAST:event_cbTipoPregActionPerformed

    private void cbTemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTemaActionPerformed
        // TODO add your handling code here:
        if (validarTema()) {
            if (validarEnunciado()) {
                if (preg != null) {
                    padre.setSize(1008, 650);
                    padre.setLocationRelativeTo(null);
                }
            }
        }
    }//GEN-LAST:event_cbTemaActionPerformed

    private void btnTerminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTerminarActionPerformed
        // TODO add your handling code here:
        if (validarCampos()) {
            if (preg == null) {
                Main.mensaje(300, 30, "CREANDO PREGUNTA...", 3, "/Recursos/Imagenes/spinner-of-dots.png");
                boolean bool = controladorPregunta.registrarPregunta(
                        Integer.parseInt(controladorPregunta.traerDato("tema", "idTema", "nombre", cbTema.getSelectedItem().toString())),
                        tipoPreg, txtEnunciado.getText().trim());
                if (chA.isVisible()) {
                    controladorPregunta.añadirOpcion((chA.isSelected() ? 1 : 0), txtA.getText());
                    controladorPregunta.añadirOpcion((chB.isSelected() ? 1 : 0), txtB.getText());
                    controladorPregunta.añadirOpcion((chC.isSelected() ? 1 : 0), txtC.getText());
                    controladorPregunta.añadirOpcion((chD.isSelected() ? 1 : 0), txtD.getText());
                } else {
                    controladorPregunta.añadirOpcion((rbtnA.isSelected() ? 1 : 0), txtA.getText());
                    controladorPregunta.añadirOpcion((rbtnB.isSelected() ? 1 : 0), txtB.getText());
                    controladorPregunta.añadirOpcion((rbtnC.isSelected() ? 1 : 0), txtC.getText());
                    controladorPregunta.añadirOpcion((rbtnD.isSelected() ? 1 : 0), txtD.getText());
                }
                if (bool) {
                    Main.mensaje(300, 30, "PREGUNTA CREADA!!!...", 3, "/Recursos/Imagenes/Cuenta.png");
                    padre.dispose();
                    abuelo.listar();
                } else {
                    Main.mensaje(300, 30, "NO SE HA PODIDO CREAR LA PREGUNTA!!!...", 3, "/Recursos/Imagenes/cancel.png");
                }
            } else {
                Main.mensaje(300, 30, "MODIFICANDO PREGUNTA...", 3, "/Recursos/Imagenes/spinner-of-dots.png");
                boolean bool = controladorPregunta.modificarPregunta(idPreg + "",
                        Integer.parseInt(controladorPregunta.traerDato("tema", "idTema", "nombre", cbTema.getSelectedItem().toString())),
                        tipoPreg, txtEnunciado.getText());

                int[] idOpciones = controladorPregunta.traerOpciones(idPreg);

                if (chA.isVisible()) {
                    controladorPregunta.modificarOpcion(idOpciones[0] + "", idPreg + "", (chA.isSelected() ? 1 : 0), txtA.getText());
                    controladorPregunta.modificarOpcion(idOpciones[1] + "", idPreg + "", (chB.isSelected() ? 1 : 0), txtB.getText());
                    controladorPregunta.modificarOpcion(idOpciones[2] + "", idPreg + "", (chC.isSelected() ? 1 : 0), txtC.getText());
                    controladorPregunta.modificarOpcion(idOpciones[3] + "", idPreg + "", (chD.isSelected() ? 1 : 0), txtD.getText());
                } else {
                    controladorPregunta.modificarOpcion(idOpciones[0] + "", idPreg + "", (rbtnA.isSelected() ? 1 : 0), txtA.getText());
                    controladorPregunta.modificarOpcion(idOpciones[1] + "", idPreg + "", (rbtnB.isSelected() ? 1 : 0), txtB.getText());
                    controladorPregunta.modificarOpcion(idOpciones[2] + "", idPreg + "", (rbtnC.isSelected() ? 1 : 0), txtC.getText());
                    controladorPregunta.modificarOpcion(idOpciones[3] + "", idPreg + "", (rbtnD.isSelected() ? 1 : 0), txtD.getText());
                }
                if (bool) {
                    Main.mensaje(300, 30, "PREGUNTA MODIFICADA!!!...", 3, "/Recursos/Imagenes/Cuenta.png");
                    padre.dispose();
                    abuelo.listar();
                } else {
                    Main.mensaje(300, 30, "NO SE HA PODIDO MODIFICAR LA PREGUNTA!!!...", 3, "/Recursos/Imagenes/cancel.png");
                }
            }
        }
    }//GEN-LAST:event_btnTerminarActionPerformed

    private void txtEnunciadoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEnunciadoKeyReleased
        // TODO add your handling code here:
        validarEnunciado();
    }//GEN-LAST:event_txtEnunciadoKeyReleased

    private void txtAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAMouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON3) {
            if (tipoPreg == 2) {
                chA.setSelected(!chA.isSelected());
            } else if (tipoPreg == 1) {
                rbtnA.setSelected(!rbtnA.isSelected());
            }
        }
    }//GEN-LAST:event_txtAMouseClicked

    private void txtBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBMouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON3) {
            if (tipoPreg == 2) {
                chB.setSelected(!chB.isSelected());
            } else if (tipoPreg == 1) {
                rbtnB.setSelected(!rbtnB.isSelected());
            }
        }
    }//GEN-LAST:event_txtBMouseClicked

    private void txtCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCMouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON3) {
            if (tipoPreg == 2) {
                chC.setSelected(!chC.isSelected());
            } else if (tipoPreg == 1) {
                rbtnC.setSelected(!rbtnC.isSelected());
            }
        }
    }//GEN-LAST:event_txtCMouseClicked

    private void txtDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDMouseClicked
        // TODO add your handling code here:
        if (evt.getButton() == MouseEvent.BUTTON3) {
            if (tipoPreg == 2) {
                chD.setSelected(!chD.isSelected());
            } else if (tipoPreg == 1) {
                rbtnD.setSelected(!rbtnD.isSelected());
            }
        }
    }//GEN-LAST:event_txtDMouseClicked

    private void txtAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAFocusGained
        // TODO add your handling code here:
        txtA.setBorder(new EtchedBorder(1));
    }//GEN-LAST:event_txtAFocusGained

    private void txtBFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBFocusGained
        // TODO add your handling code here:
        txtB.setBorder(new EtchedBorder(1));
    }//GEN-LAST:event_txtBFocusGained

    private void txtCFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCFocusGained
        // TODO add your handling code here:
        txtC.setBorder(new EtchedBorder(1));
    }//GEN-LAST:event_txtCFocusGained

    private void txtDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDFocusGained
        // TODO add your handling code here:
        txtD.setBorder(new EtchedBorder(1));
    }//GEN-LAST:event_txtDFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTerminar;
    private javax.swing.JComboBox<String> cbTema;
    private javax.swing.JComboBox<String> cbTipoPreg;
    private javax.swing.JCheckBox chA;
    private javax.swing.JCheckBox chB;
    private javax.swing.JCheckBox chC;
    private javax.swing.JCheckBox chD;
    private javax.swing.ButtonGroup grupo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblA;
    private javax.swing.JLabel lblB;
    private javax.swing.JLabel lblC;
    private javax.swing.JLabel lblD;
    private javax.swing.JLabel lblEnunciado;
    private javax.swing.JLabel lblTP;
    private javax.swing.JLabel lblTema;
    private javax.swing.JPanel pnlA;
    private javax.swing.JPanel pnlB;
    private javax.swing.JPanel pnlC;
    private javax.swing.JPanel pnlCB;
    private javax.swing.JPanel pnlD;
    private javax.swing.JPanel pnlPrengunta;
    private javax.swing.JRadioButton rbtnA;
    private javax.swing.JRadioButton rbtnB;
    private javax.swing.JRadioButton rbtnC;
    private javax.swing.JRadioButton rbtnD;
    private javax.swing.JTextArea txtA;
    private javax.swing.JTextArea txtB;
    private javax.swing.JTextArea txtC;
    private javax.swing.JTextArea txtD;
    private javax.swing.JTextArea txtEnunciado;
    // End of variables declaration//GEN-END:variables

    private void iniciar() {
        controladorPregunta = new CtlPregunta();
        controladorTema = new CtlTema();
        cbTema.setModel(controladorTema.listarCB());
        cbTipoPreg.setModel(controladorPregunta.listarTipoPregunta());
        añadirGrupoBotones();
        txtEnunciado.setLineWrap(true);
        txtA.setLineWrap(true);
        txtB.setLineWrap(true);
        txtC.setLineWrap(true);
        txtD.setLineWrap(true);
    }

    private boolean validarCampos() {
        boolean bool = true;
        if (txtA.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "No ha introducido un enunciado valido para la opcion A");
            txtA.setBorder(new LineBorder(Color.red, 2));
            bool = false;
        }
        if (txtB.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "No ha introducido un enunciado valido para la opcion B");
            txtB.setBorder(new LineBorder(Color.red, 2));
            bool = false;
        }
        if (txtC.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "No ha introducido un enunciado valido para la opcion C");
            txtC.setBorder(new LineBorder(Color.red, 2));
            bool = false;
        }
        if (txtD.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "No ha introducido un enunciado valido para la opcion D");
            txtD.setBorder(new LineBorder(Color.red, 2));
            bool = false;
        }
        if (tipoPreg == 1) {
            if (!rbtnA.isSelected() && !rbtnB.isSelected() && !rbtnC.isSelected() && !rbtnD.isSelected()) {
                JOptionPane.showMessageDialog(null, "<html>Debe seleccionar la opción correcta dando clic derecho en cualquier opción<br>"
                        + "o dando clic en los ciculitos que esta al lado izquierdo de cada caja de texto</html>");
                bool = false;
            }
        } else if (tipoPreg == 2) {
            if (!chA.isSelected() && !chB.isSelected() && !chC.isSelected() && !chD.isSelected()) {
                JOptionPane.showMessageDialog(null, "<html>Debe seleccionar minimo una opción correcta dando clic derecho en cualquier opción"
                        + "<br>o seleccionando en cualquier check(cuadrito) que estan al aldo izquierdo de cada caja de texto.</html>");
                bool = false;
            }
        }
        return bool;
    }

    private void cargarInfo() {
        cbTipoPreg.setSelectedIndex(preg.getIdTipoPregunta());
        for (int i = 0; i < cbTema.getItemCount(); i++) {
            if (cbTema.getItemAt(i).equals(controladorPregunta.traerDato("tema", "nombre", "idTema", preg.getIdTema() + ""))) {
                cbTema.setSelectedIndex(i);
                break;
            }
        }
        txtEnunciado.setText(preg.getEnunciado());
        txtA.setText(opciones.get(0).getEnunciado());
        txtB.setText(opciones.get(1).getEnunciado());
        txtC.setText(opciones.get(2).getEnunciado());
        txtD.setText(opciones.get(3).getEnunciado());
        boolean[] bool = new boolean[4];
        for (int i = 0; i < opciones.size(); i++) {
            bool[i] = opciones.get(i).getCorrecta() != 0;
        }
        if (preg.getIdTipoPregunta() == 1) {
            rbtnA.setSelected(bool[0]);
            rbtnB.setSelected(bool[1]);
            rbtnC.setSelected(bool[2]);
            rbtnD.setSelected(bool[3]);
            chA.setVisible(false);
            chB.setVisible(false);
            chC.setVisible(false);
            chD.setVisible(false);
        } else {
            chA.setSelected(bool[0]);
            chB.setSelected(bool[1]);
            chC.setSelected(bool[2]);
            chD.setSelected(bool[3]);
            rbtnA.setVisible(false);
            rbtnB.setVisible(false);
            rbtnC.setVisible(false);
            rbtnD.setVisible(false);
        }
    }

    private boolean validarEnunciado() {
        boolean bool;
        if (txtEnunciado.getText().isEmpty()) {
            opcionesVisibles(false);
            validarTema();
            bool = false;
        } else {
            opcionesVisibles(true);
            bool = true;
        }
        padre.setLocationRelativeTo(null);
        actualizarOpciones();
        return bool;
    }

    private void actualizarOpciones() {
        pnlA.updateUI();
        pnlB.updateUI();
        pnlC.updateUI();
        pnlD.updateUI();
        pnlPrengunta.updateUI();
    }

    private void opcionesVisibles(boolean bool) {
        lblA.setVisible(bool);
        lblB.setVisible(bool);
        lblC.setVisible(bool);
        lblD.setVisible(bool);
        validarTP();
        txtA.setVisible(bool);
        txtB.setVisible(bool);
        txtC.setVisible(bool);
        txtD.setVisible(bool);
        pnlA.setVisible(bool);
        pnlB.setVisible(bool);
        pnlC.setVisible(bool);
        pnlD.setVisible(bool);
        btnTerminar.setVisible(bool);
        if (bool && preg == null) {
            padre.setSize(1008, 650);
        } else if (bool && chA.isVisible()) {
            padre.setSize(1008, 650);
        } else if (bool && rbtnA.isVisible()) {
            padre.setSize(1008, 650);
        }
    }

    private void validarTP() {
        switch (tipoPreg) {
            case 2:
                chA.setVisible(true);
                chB.setVisible(true);
                chC.setVisible(true);
                chD.setVisible(true);
                rbtnA.setVisible(false);
                rbtnB.setVisible(false);
                rbtnC.setVisible(false);
                rbtnD.setVisible(false);
                break;
            case 1:
                rbtnA.setVisible(true);
                rbtnB.setVisible(true);
                rbtnC.setVisible(true);
                rbtnD.setVisible(true);
                chA.setVisible(false);
                chB.setVisible(false);
                chC.setVisible(false);
                chD.setVisible(false);
                break;
            default:
                rbtnA.setVisible(false);
                rbtnB.setVisible(false);
                rbtnC.setVisible(false);
                rbtnD.setVisible(false);
                chA.setVisible(false);
                chB.setVisible(false);
                chC.setVisible(false);
                chD.setVisible(false);
                break;
        }
    }

    private boolean validarTema() {
        boolean bool = false;
        if (cbTema.getSelectedIndex() != 0) {
            pnlPrengunta.setVisible(true);
            lblEnunciado.setVisible(true);
            txtEnunciado.setVisible(true);
            padre.setSize(842, 300);
            bool = true;
        } else {
            pnlPrengunta.setVisible(false);
            lblEnunciado.setVisible(false);
            txtEnunciado.setVisible(false);
            padre.setSize(842, 140);
        }
        padre.setLocationRelativeTo(null);
        return bool;
    }

    private void añadirGrupoBotones() {
        grupo.add(rbtnA);
        grupo.add(rbtnB);
        grupo.add(rbtnC);
        grupo.add(rbtnD);
    }
}
